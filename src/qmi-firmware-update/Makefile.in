# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = qmi-firmware-update$(EXEEXT)
subdir = src/qmi-firmware-update
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/compiler-warnings.m4 \
	$(top_srcdir)/m4/gtk-doc.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
LTLIBRARIES = $(noinst_LTLIBRARIES)
libutils_la_DEPENDENCIES =  \
	$(top_builddir)/src/libqmi-glib/libqmi-glib.la
am_libutils_la_OBJECTS = libutils_la-qfu-utils.lo
libutils_la_OBJECTS = $(am_libutils_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_qmi_firmware_update_OBJECTS =  \
	qmi_firmware_update-qfu-main.$(OBJEXT) \
	qmi_firmware_update-qfu-device-selection.$(OBJEXT) \
	qmi_firmware_update-qfu-operation-update.$(OBJEXT) \
	qmi_firmware_update-qfu-operation-verify.$(OBJEXT) \
	qmi_firmware_update-qfu-operation-reset.$(OBJEXT) \
	qmi_firmware_update-qfu-log.$(OBJEXT) \
	qmi_firmware_update-qfu-updater.$(OBJEXT) \
	qmi_firmware_update-qfu-udev-helpers.$(OBJEXT) \
	qmi_firmware_update-qfu-image.$(OBJEXT) \
	qmi_firmware_update-qfu-image-cwe.$(OBJEXT) \
	qmi_firmware_update-qfu-image-factory.$(OBJEXT) \
	qmi_firmware_update-qfu-dload-message.$(OBJEXT) \
	qmi_firmware_update-qfu-qdl-message.$(OBJEXT) \
	qmi_firmware_update-qfu-qdl-device.$(OBJEXT) \
	qmi_firmware_update-qfu-reseter.$(OBJEXT) \
	qmi_firmware_update-qfu-at-device.$(OBJEXT)
am__objects_1 = qmi_firmware_update-qfu-enum-types.$(OBJEXT)
nodist_qmi_firmware_update_OBJECTS = $(am__objects_1)
qmi_firmware_update_OBJECTS = $(am_qmi_firmware_update_OBJECTS) \
	$(nodist_qmi_firmware_update_OBJECTS)
am__DEPENDENCIES_1 =
qmi_firmware_update_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(builddir)/libutils.la
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/libutils_la-qfu-utils.Plo \
	./$(DEPDIR)/qmi_firmware_update-qfu-at-device.Po \
	./$(DEPDIR)/qmi_firmware_update-qfu-device-selection.Po \
	./$(DEPDIR)/qmi_firmware_update-qfu-dload-message.Po \
	./$(DEPDIR)/qmi_firmware_update-qfu-enum-types.Po \
	./$(DEPDIR)/qmi_firmware_update-qfu-image-cwe.Po \
	./$(DEPDIR)/qmi_firmware_update-qfu-image-factory.Po \
	./$(DEPDIR)/qmi_firmware_update-qfu-image.Po \
	./$(DEPDIR)/qmi_firmware_update-qfu-log.Po \
	./$(DEPDIR)/qmi_firmware_update-qfu-main.Po \
	./$(DEPDIR)/qmi_firmware_update-qfu-operation-reset.Po \
	./$(DEPDIR)/qmi_firmware_update-qfu-operation-update.Po \
	./$(DEPDIR)/qmi_firmware_update-qfu-operation-verify.Po \
	./$(DEPDIR)/qmi_firmware_update-qfu-qdl-device.Po \
	./$(DEPDIR)/qmi_firmware_update-qfu-qdl-message.Po \
	./$(DEPDIR)/qmi_firmware_update-qfu-reseter.Po \
	./$(DEPDIR)/qmi_firmware_update-qfu-udev-helpers.Po \
	./$(DEPDIR)/qmi_firmware_update-qfu-updater.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libutils_la_SOURCES) $(qmi_firmware_update_SOURCES) \
	$(nodist_qmi_firmware_update_SOURCES)
DIST_SOURCES = $(libutils_la_SOURCES) $(qmi_firmware_update_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GLIB_MKENUMS = @GLIB_MKENUMS@
GREP = @GREP@
GTKDOC_CHECK = @GTKDOC_CHECK@
GTKDOC_CHECK_PATH = @GTKDOC_CHECK_PATH@
GTKDOC_DEPS_CFLAGS = @GTKDOC_DEPS_CFLAGS@
GTKDOC_DEPS_LIBS = @GTKDOC_DEPS_LIBS@
GTKDOC_MKPDF = @GTKDOC_MKPDF@
GTKDOC_REBASE = @GTKDOC_REBASE@
GUDEV_CFLAGS = @GUDEV_CFLAGS@
GUDEV_LIBS = @GUDEV_LIBS@
HELP2MAN = @HELP2MAN@
HTML_DIR = @HTML_DIR@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MBIM_CFLAGS = @MBIM_CFLAGS@
MBIM_LIBS = @MBIM_LIBS@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
QMI_GLIB_LT_AGE = @QMI_GLIB_LT_AGE@
QMI_GLIB_LT_CURRENT = @QMI_GLIB_LT_CURRENT@
QMI_GLIB_LT_REVISION = @QMI_GLIB_LT_REVISION@
QMI_MAJOR_VERSION = @QMI_MAJOR_VERSION@
QMI_MBIM_QMUX_SUPPORTED = @QMI_MBIM_QMUX_SUPPORTED@
QMI_MICRO_VERSION = @QMI_MICRO_VERSION@
QMI_MINOR_VERSION = @QMI_MINOR_VERSION@
QMI_USERNAME = @QMI_USERNAME@
QMI_VERSION = @QMI_VERSION@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
UDEV_BASE_DIR = @UDEV_BASE_DIR@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SUBDIRS = . test
noinst_LTLIBRARIES = libutils.la
libutils_la_SOURCES = \
	qfu-utils.h qfu-utils.c \
	$(NULL)

libutils_la_CPPFLAGS = \
	$(GLIB_CFLAGS) \
	-I$(top_srcdir)/src/libqmi-glib \
	-I$(top_srcdir)/src/libqmi-glib/generated \
	-I$(top_builddir)/src/libqmi-glib \
	-I$(top_builddir)/src/libqmi-glib/generated \
	$(NULL)

libutils_la_LIBADD = \
	$(top_builddir)/src/libqmi-glib/libqmi-glib.la \
	$(GLIB_LDFLAGS) \
	$(NULL)

qmi_firmware_update_CPPFLAGS = \
	$(GLIB_CFLAGS) \
	$(GUDEV_CFLAGS) \
	$(MBIM_CFLAGS) \
	-I$(top_srcdir) \
	-I$(top_srcdir)/src/libqmi-glib \
	-I$(top_srcdir)/src/libqmi-glib/generated \
	-I$(top_builddir)/src/libqmi-glib \
	-I$(top_builddir)/src/libqmi-glib/generated \
	$(NULL)

ENUMS = \
	$(top_srcdir)/src/qmi-firmware-update/qfu-image.h \
	$(top_srcdir)/src/qmi-firmware-update/qfu-qdl-message.h \
	$(top_srcdir)/src/qmi-firmware-update/qfu-dload-message.h \
	$(NULL)

ENUMS_GENERATED = \
	qfu-enum-types.h qfu-enum-types.c \
	$(NULL)

nodist_qmi_firmware_update_SOURCES = \
	$(ENUMS_GENERATED) \
	$(NULL)

qmi_firmware_update_SOURCES = \
	qfu-main.c \
	qfu-device-selection.h qfu-device-selection.c \
	qfu-operation.h \
	qfu-operation-update.c \
	qfu-operation-verify.c \
	qfu-operation-reset.c \
	qfu-log.h qfu-log.c \
	qfu-updater.h qfu-updater.c \
	qfu-udev-helpers.h qfu-udev-helpers.c \
	qfu-image.h qfu-image.c \
	qfu-image-cwe.h qfu-image-cwe.c \
	qfu-image-factory.h qfu-image-factory.c \
	qfu-dload-message.h qfu-dload-message.c \
	qfu-qdl-message.h qfu-qdl-message.c \
	qfu-qdl-device.h qfu-qdl-device.c \
	qfu-reseter.h qfu-reseter.c \
	qfu-at-device.h qfu-at-device.c \
	$(NULL)

qmi_firmware_update_LDADD = \
	$(MBIM_LIBS) \
	$(GUDEV_LIBS) \
	$(GLIB_LIBS) \
	$(builddir)/libutils.la \
	$(NULL)


# Request to build enum types before anything else
BUILT_SOURCES = $(ENUMS_GENERATED)
CLEANFILES = $(ENUMS_GENERATED)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/qmi-firmware-update/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/qmi-firmware-update/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libutils.la: $(libutils_la_OBJECTS) $(libutils_la_DEPENDENCIES) $(EXTRA_libutils_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libutils_la_OBJECTS) $(libutils_la_LIBADD) $(LIBS)

qmi-firmware-update$(EXEEXT): $(qmi_firmware_update_OBJECTS) $(qmi_firmware_update_DEPENDENCIES) $(EXTRA_qmi_firmware_update_DEPENDENCIES) 
	@rm -f qmi-firmware-update$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(qmi_firmware_update_OBJECTS) $(qmi_firmware_update_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libutils_la-qfu-utils.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmi_firmware_update-qfu-at-device.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmi_firmware_update-qfu-device-selection.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmi_firmware_update-qfu-dload-message.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmi_firmware_update-qfu-enum-types.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmi_firmware_update-qfu-image-cwe.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmi_firmware_update-qfu-image-factory.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmi_firmware_update-qfu-image.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmi_firmware_update-qfu-log.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmi_firmware_update-qfu-main.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmi_firmware_update-qfu-operation-reset.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmi_firmware_update-qfu-operation-update.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmi_firmware_update-qfu-operation-verify.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmi_firmware_update-qfu-qdl-device.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmi_firmware_update-qfu-qdl-message.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmi_firmware_update-qfu-reseter.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmi_firmware_update-qfu-udev-helpers.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmi_firmware_update-qfu-updater.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

libutils_la-qfu-utils.lo: qfu-utils.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libutils_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libutils_la-qfu-utils.lo -MD -MP -MF $(DEPDIR)/libutils_la-qfu-utils.Tpo -c -o libutils_la-qfu-utils.lo `test -f 'qfu-utils.c' || echo '$(srcdir)/'`qfu-utils.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libutils_la-qfu-utils.Tpo $(DEPDIR)/libutils_la-qfu-utils.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-utils.c' object='libutils_la-qfu-utils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libutils_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libutils_la-qfu-utils.lo `test -f 'qfu-utils.c' || echo '$(srcdir)/'`qfu-utils.c

qmi_firmware_update-qfu-main.o: qfu-main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-main.o -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-main.Tpo -c -o qmi_firmware_update-qfu-main.o `test -f 'qfu-main.c' || echo '$(srcdir)/'`qfu-main.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-main.Tpo $(DEPDIR)/qmi_firmware_update-qfu-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-main.c' object='qmi_firmware_update-qfu-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-main.o `test -f 'qfu-main.c' || echo '$(srcdir)/'`qfu-main.c

qmi_firmware_update-qfu-main.obj: qfu-main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-main.obj -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-main.Tpo -c -o qmi_firmware_update-qfu-main.obj `if test -f 'qfu-main.c'; then $(CYGPATH_W) 'qfu-main.c'; else $(CYGPATH_W) '$(srcdir)/qfu-main.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-main.Tpo $(DEPDIR)/qmi_firmware_update-qfu-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-main.c' object='qmi_firmware_update-qfu-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-main.obj `if test -f 'qfu-main.c'; then $(CYGPATH_W) 'qfu-main.c'; else $(CYGPATH_W) '$(srcdir)/qfu-main.c'; fi`

qmi_firmware_update-qfu-device-selection.o: qfu-device-selection.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-device-selection.o -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-device-selection.Tpo -c -o qmi_firmware_update-qfu-device-selection.o `test -f 'qfu-device-selection.c' || echo '$(srcdir)/'`qfu-device-selection.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-device-selection.Tpo $(DEPDIR)/qmi_firmware_update-qfu-device-selection.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-device-selection.c' object='qmi_firmware_update-qfu-device-selection.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-device-selection.o `test -f 'qfu-device-selection.c' || echo '$(srcdir)/'`qfu-device-selection.c

qmi_firmware_update-qfu-device-selection.obj: qfu-device-selection.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-device-selection.obj -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-device-selection.Tpo -c -o qmi_firmware_update-qfu-device-selection.obj `if test -f 'qfu-device-selection.c'; then $(CYGPATH_W) 'qfu-device-selection.c'; else $(CYGPATH_W) '$(srcdir)/qfu-device-selection.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-device-selection.Tpo $(DEPDIR)/qmi_firmware_update-qfu-device-selection.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-device-selection.c' object='qmi_firmware_update-qfu-device-selection.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-device-selection.obj `if test -f 'qfu-device-selection.c'; then $(CYGPATH_W) 'qfu-device-selection.c'; else $(CYGPATH_W) '$(srcdir)/qfu-device-selection.c'; fi`

qmi_firmware_update-qfu-operation-update.o: qfu-operation-update.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-operation-update.o -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-operation-update.Tpo -c -o qmi_firmware_update-qfu-operation-update.o `test -f 'qfu-operation-update.c' || echo '$(srcdir)/'`qfu-operation-update.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-operation-update.Tpo $(DEPDIR)/qmi_firmware_update-qfu-operation-update.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-operation-update.c' object='qmi_firmware_update-qfu-operation-update.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-operation-update.o `test -f 'qfu-operation-update.c' || echo '$(srcdir)/'`qfu-operation-update.c

qmi_firmware_update-qfu-operation-update.obj: qfu-operation-update.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-operation-update.obj -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-operation-update.Tpo -c -o qmi_firmware_update-qfu-operation-update.obj `if test -f 'qfu-operation-update.c'; then $(CYGPATH_W) 'qfu-operation-update.c'; else $(CYGPATH_W) '$(srcdir)/qfu-operation-update.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-operation-update.Tpo $(DEPDIR)/qmi_firmware_update-qfu-operation-update.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-operation-update.c' object='qmi_firmware_update-qfu-operation-update.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-operation-update.obj `if test -f 'qfu-operation-update.c'; then $(CYGPATH_W) 'qfu-operation-update.c'; else $(CYGPATH_W) '$(srcdir)/qfu-operation-update.c'; fi`

qmi_firmware_update-qfu-operation-verify.o: qfu-operation-verify.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-operation-verify.o -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-operation-verify.Tpo -c -o qmi_firmware_update-qfu-operation-verify.o `test -f 'qfu-operation-verify.c' || echo '$(srcdir)/'`qfu-operation-verify.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-operation-verify.Tpo $(DEPDIR)/qmi_firmware_update-qfu-operation-verify.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-operation-verify.c' object='qmi_firmware_update-qfu-operation-verify.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-operation-verify.o `test -f 'qfu-operation-verify.c' || echo '$(srcdir)/'`qfu-operation-verify.c

qmi_firmware_update-qfu-operation-verify.obj: qfu-operation-verify.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-operation-verify.obj -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-operation-verify.Tpo -c -o qmi_firmware_update-qfu-operation-verify.obj `if test -f 'qfu-operation-verify.c'; then $(CYGPATH_W) 'qfu-operation-verify.c'; else $(CYGPATH_W) '$(srcdir)/qfu-operation-verify.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-operation-verify.Tpo $(DEPDIR)/qmi_firmware_update-qfu-operation-verify.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-operation-verify.c' object='qmi_firmware_update-qfu-operation-verify.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-operation-verify.obj `if test -f 'qfu-operation-verify.c'; then $(CYGPATH_W) 'qfu-operation-verify.c'; else $(CYGPATH_W) '$(srcdir)/qfu-operation-verify.c'; fi`

qmi_firmware_update-qfu-operation-reset.o: qfu-operation-reset.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-operation-reset.o -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-operation-reset.Tpo -c -o qmi_firmware_update-qfu-operation-reset.o `test -f 'qfu-operation-reset.c' || echo '$(srcdir)/'`qfu-operation-reset.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-operation-reset.Tpo $(DEPDIR)/qmi_firmware_update-qfu-operation-reset.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-operation-reset.c' object='qmi_firmware_update-qfu-operation-reset.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-operation-reset.o `test -f 'qfu-operation-reset.c' || echo '$(srcdir)/'`qfu-operation-reset.c

qmi_firmware_update-qfu-operation-reset.obj: qfu-operation-reset.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-operation-reset.obj -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-operation-reset.Tpo -c -o qmi_firmware_update-qfu-operation-reset.obj `if test -f 'qfu-operation-reset.c'; then $(CYGPATH_W) 'qfu-operation-reset.c'; else $(CYGPATH_W) '$(srcdir)/qfu-operation-reset.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-operation-reset.Tpo $(DEPDIR)/qmi_firmware_update-qfu-operation-reset.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-operation-reset.c' object='qmi_firmware_update-qfu-operation-reset.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-operation-reset.obj `if test -f 'qfu-operation-reset.c'; then $(CYGPATH_W) 'qfu-operation-reset.c'; else $(CYGPATH_W) '$(srcdir)/qfu-operation-reset.c'; fi`

qmi_firmware_update-qfu-log.o: qfu-log.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-log.o -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-log.Tpo -c -o qmi_firmware_update-qfu-log.o `test -f 'qfu-log.c' || echo '$(srcdir)/'`qfu-log.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-log.Tpo $(DEPDIR)/qmi_firmware_update-qfu-log.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-log.c' object='qmi_firmware_update-qfu-log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-log.o `test -f 'qfu-log.c' || echo '$(srcdir)/'`qfu-log.c

qmi_firmware_update-qfu-log.obj: qfu-log.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-log.obj -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-log.Tpo -c -o qmi_firmware_update-qfu-log.obj `if test -f 'qfu-log.c'; then $(CYGPATH_W) 'qfu-log.c'; else $(CYGPATH_W) '$(srcdir)/qfu-log.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-log.Tpo $(DEPDIR)/qmi_firmware_update-qfu-log.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-log.c' object='qmi_firmware_update-qfu-log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-log.obj `if test -f 'qfu-log.c'; then $(CYGPATH_W) 'qfu-log.c'; else $(CYGPATH_W) '$(srcdir)/qfu-log.c'; fi`

qmi_firmware_update-qfu-updater.o: qfu-updater.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-updater.o -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-updater.Tpo -c -o qmi_firmware_update-qfu-updater.o `test -f 'qfu-updater.c' || echo '$(srcdir)/'`qfu-updater.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-updater.Tpo $(DEPDIR)/qmi_firmware_update-qfu-updater.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-updater.c' object='qmi_firmware_update-qfu-updater.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-updater.o `test -f 'qfu-updater.c' || echo '$(srcdir)/'`qfu-updater.c

qmi_firmware_update-qfu-updater.obj: qfu-updater.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-updater.obj -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-updater.Tpo -c -o qmi_firmware_update-qfu-updater.obj `if test -f 'qfu-updater.c'; then $(CYGPATH_W) 'qfu-updater.c'; else $(CYGPATH_W) '$(srcdir)/qfu-updater.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-updater.Tpo $(DEPDIR)/qmi_firmware_update-qfu-updater.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-updater.c' object='qmi_firmware_update-qfu-updater.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-updater.obj `if test -f 'qfu-updater.c'; then $(CYGPATH_W) 'qfu-updater.c'; else $(CYGPATH_W) '$(srcdir)/qfu-updater.c'; fi`

qmi_firmware_update-qfu-udev-helpers.o: qfu-udev-helpers.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-udev-helpers.o -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-udev-helpers.Tpo -c -o qmi_firmware_update-qfu-udev-helpers.o `test -f 'qfu-udev-helpers.c' || echo '$(srcdir)/'`qfu-udev-helpers.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-udev-helpers.Tpo $(DEPDIR)/qmi_firmware_update-qfu-udev-helpers.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-udev-helpers.c' object='qmi_firmware_update-qfu-udev-helpers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-udev-helpers.o `test -f 'qfu-udev-helpers.c' || echo '$(srcdir)/'`qfu-udev-helpers.c

qmi_firmware_update-qfu-udev-helpers.obj: qfu-udev-helpers.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-udev-helpers.obj -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-udev-helpers.Tpo -c -o qmi_firmware_update-qfu-udev-helpers.obj `if test -f 'qfu-udev-helpers.c'; then $(CYGPATH_W) 'qfu-udev-helpers.c'; else $(CYGPATH_W) '$(srcdir)/qfu-udev-helpers.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-udev-helpers.Tpo $(DEPDIR)/qmi_firmware_update-qfu-udev-helpers.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-udev-helpers.c' object='qmi_firmware_update-qfu-udev-helpers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-udev-helpers.obj `if test -f 'qfu-udev-helpers.c'; then $(CYGPATH_W) 'qfu-udev-helpers.c'; else $(CYGPATH_W) '$(srcdir)/qfu-udev-helpers.c'; fi`

qmi_firmware_update-qfu-image.o: qfu-image.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-image.o -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-image.Tpo -c -o qmi_firmware_update-qfu-image.o `test -f 'qfu-image.c' || echo '$(srcdir)/'`qfu-image.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-image.Tpo $(DEPDIR)/qmi_firmware_update-qfu-image.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-image.c' object='qmi_firmware_update-qfu-image.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-image.o `test -f 'qfu-image.c' || echo '$(srcdir)/'`qfu-image.c

qmi_firmware_update-qfu-image.obj: qfu-image.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-image.obj -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-image.Tpo -c -o qmi_firmware_update-qfu-image.obj `if test -f 'qfu-image.c'; then $(CYGPATH_W) 'qfu-image.c'; else $(CYGPATH_W) '$(srcdir)/qfu-image.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-image.Tpo $(DEPDIR)/qmi_firmware_update-qfu-image.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-image.c' object='qmi_firmware_update-qfu-image.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-image.obj `if test -f 'qfu-image.c'; then $(CYGPATH_W) 'qfu-image.c'; else $(CYGPATH_W) '$(srcdir)/qfu-image.c'; fi`

qmi_firmware_update-qfu-image-cwe.o: qfu-image-cwe.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-image-cwe.o -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-image-cwe.Tpo -c -o qmi_firmware_update-qfu-image-cwe.o `test -f 'qfu-image-cwe.c' || echo '$(srcdir)/'`qfu-image-cwe.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-image-cwe.Tpo $(DEPDIR)/qmi_firmware_update-qfu-image-cwe.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-image-cwe.c' object='qmi_firmware_update-qfu-image-cwe.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-image-cwe.o `test -f 'qfu-image-cwe.c' || echo '$(srcdir)/'`qfu-image-cwe.c

qmi_firmware_update-qfu-image-cwe.obj: qfu-image-cwe.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-image-cwe.obj -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-image-cwe.Tpo -c -o qmi_firmware_update-qfu-image-cwe.obj `if test -f 'qfu-image-cwe.c'; then $(CYGPATH_W) 'qfu-image-cwe.c'; else $(CYGPATH_W) '$(srcdir)/qfu-image-cwe.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-image-cwe.Tpo $(DEPDIR)/qmi_firmware_update-qfu-image-cwe.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-image-cwe.c' object='qmi_firmware_update-qfu-image-cwe.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-image-cwe.obj `if test -f 'qfu-image-cwe.c'; then $(CYGPATH_W) 'qfu-image-cwe.c'; else $(CYGPATH_W) '$(srcdir)/qfu-image-cwe.c'; fi`

qmi_firmware_update-qfu-image-factory.o: qfu-image-factory.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-image-factory.o -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-image-factory.Tpo -c -o qmi_firmware_update-qfu-image-factory.o `test -f 'qfu-image-factory.c' || echo '$(srcdir)/'`qfu-image-factory.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-image-factory.Tpo $(DEPDIR)/qmi_firmware_update-qfu-image-factory.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-image-factory.c' object='qmi_firmware_update-qfu-image-factory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-image-factory.o `test -f 'qfu-image-factory.c' || echo '$(srcdir)/'`qfu-image-factory.c

qmi_firmware_update-qfu-image-factory.obj: qfu-image-factory.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-image-factory.obj -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-image-factory.Tpo -c -o qmi_firmware_update-qfu-image-factory.obj `if test -f 'qfu-image-factory.c'; then $(CYGPATH_W) 'qfu-image-factory.c'; else $(CYGPATH_W) '$(srcdir)/qfu-image-factory.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-image-factory.Tpo $(DEPDIR)/qmi_firmware_update-qfu-image-factory.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-image-factory.c' object='qmi_firmware_update-qfu-image-factory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-image-factory.obj `if test -f 'qfu-image-factory.c'; then $(CYGPATH_W) 'qfu-image-factory.c'; else $(CYGPATH_W) '$(srcdir)/qfu-image-factory.c'; fi`

qmi_firmware_update-qfu-dload-message.o: qfu-dload-message.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-dload-message.o -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-dload-message.Tpo -c -o qmi_firmware_update-qfu-dload-message.o `test -f 'qfu-dload-message.c' || echo '$(srcdir)/'`qfu-dload-message.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-dload-message.Tpo $(DEPDIR)/qmi_firmware_update-qfu-dload-message.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-dload-message.c' object='qmi_firmware_update-qfu-dload-message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-dload-message.o `test -f 'qfu-dload-message.c' || echo '$(srcdir)/'`qfu-dload-message.c

qmi_firmware_update-qfu-dload-message.obj: qfu-dload-message.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-dload-message.obj -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-dload-message.Tpo -c -o qmi_firmware_update-qfu-dload-message.obj `if test -f 'qfu-dload-message.c'; then $(CYGPATH_W) 'qfu-dload-message.c'; else $(CYGPATH_W) '$(srcdir)/qfu-dload-message.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-dload-message.Tpo $(DEPDIR)/qmi_firmware_update-qfu-dload-message.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-dload-message.c' object='qmi_firmware_update-qfu-dload-message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-dload-message.obj `if test -f 'qfu-dload-message.c'; then $(CYGPATH_W) 'qfu-dload-message.c'; else $(CYGPATH_W) '$(srcdir)/qfu-dload-message.c'; fi`

qmi_firmware_update-qfu-qdl-message.o: qfu-qdl-message.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-qdl-message.o -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-qdl-message.Tpo -c -o qmi_firmware_update-qfu-qdl-message.o `test -f 'qfu-qdl-message.c' || echo '$(srcdir)/'`qfu-qdl-message.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-qdl-message.Tpo $(DEPDIR)/qmi_firmware_update-qfu-qdl-message.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-qdl-message.c' object='qmi_firmware_update-qfu-qdl-message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-qdl-message.o `test -f 'qfu-qdl-message.c' || echo '$(srcdir)/'`qfu-qdl-message.c

qmi_firmware_update-qfu-qdl-message.obj: qfu-qdl-message.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-qdl-message.obj -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-qdl-message.Tpo -c -o qmi_firmware_update-qfu-qdl-message.obj `if test -f 'qfu-qdl-message.c'; then $(CYGPATH_W) 'qfu-qdl-message.c'; else $(CYGPATH_W) '$(srcdir)/qfu-qdl-message.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-qdl-message.Tpo $(DEPDIR)/qmi_firmware_update-qfu-qdl-message.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-qdl-message.c' object='qmi_firmware_update-qfu-qdl-message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-qdl-message.obj `if test -f 'qfu-qdl-message.c'; then $(CYGPATH_W) 'qfu-qdl-message.c'; else $(CYGPATH_W) '$(srcdir)/qfu-qdl-message.c'; fi`

qmi_firmware_update-qfu-qdl-device.o: qfu-qdl-device.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-qdl-device.o -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-qdl-device.Tpo -c -o qmi_firmware_update-qfu-qdl-device.o `test -f 'qfu-qdl-device.c' || echo '$(srcdir)/'`qfu-qdl-device.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-qdl-device.Tpo $(DEPDIR)/qmi_firmware_update-qfu-qdl-device.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-qdl-device.c' object='qmi_firmware_update-qfu-qdl-device.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-qdl-device.o `test -f 'qfu-qdl-device.c' || echo '$(srcdir)/'`qfu-qdl-device.c

qmi_firmware_update-qfu-qdl-device.obj: qfu-qdl-device.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-qdl-device.obj -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-qdl-device.Tpo -c -o qmi_firmware_update-qfu-qdl-device.obj `if test -f 'qfu-qdl-device.c'; then $(CYGPATH_W) 'qfu-qdl-device.c'; else $(CYGPATH_W) '$(srcdir)/qfu-qdl-device.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-qdl-device.Tpo $(DEPDIR)/qmi_firmware_update-qfu-qdl-device.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-qdl-device.c' object='qmi_firmware_update-qfu-qdl-device.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-qdl-device.obj `if test -f 'qfu-qdl-device.c'; then $(CYGPATH_W) 'qfu-qdl-device.c'; else $(CYGPATH_W) '$(srcdir)/qfu-qdl-device.c'; fi`

qmi_firmware_update-qfu-reseter.o: qfu-reseter.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-reseter.o -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-reseter.Tpo -c -o qmi_firmware_update-qfu-reseter.o `test -f 'qfu-reseter.c' || echo '$(srcdir)/'`qfu-reseter.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-reseter.Tpo $(DEPDIR)/qmi_firmware_update-qfu-reseter.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-reseter.c' object='qmi_firmware_update-qfu-reseter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-reseter.o `test -f 'qfu-reseter.c' || echo '$(srcdir)/'`qfu-reseter.c

qmi_firmware_update-qfu-reseter.obj: qfu-reseter.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-reseter.obj -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-reseter.Tpo -c -o qmi_firmware_update-qfu-reseter.obj `if test -f 'qfu-reseter.c'; then $(CYGPATH_W) 'qfu-reseter.c'; else $(CYGPATH_W) '$(srcdir)/qfu-reseter.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-reseter.Tpo $(DEPDIR)/qmi_firmware_update-qfu-reseter.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-reseter.c' object='qmi_firmware_update-qfu-reseter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-reseter.obj `if test -f 'qfu-reseter.c'; then $(CYGPATH_W) 'qfu-reseter.c'; else $(CYGPATH_W) '$(srcdir)/qfu-reseter.c'; fi`

qmi_firmware_update-qfu-at-device.o: qfu-at-device.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-at-device.o -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-at-device.Tpo -c -o qmi_firmware_update-qfu-at-device.o `test -f 'qfu-at-device.c' || echo '$(srcdir)/'`qfu-at-device.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-at-device.Tpo $(DEPDIR)/qmi_firmware_update-qfu-at-device.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-at-device.c' object='qmi_firmware_update-qfu-at-device.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-at-device.o `test -f 'qfu-at-device.c' || echo '$(srcdir)/'`qfu-at-device.c

qmi_firmware_update-qfu-at-device.obj: qfu-at-device.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-at-device.obj -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-at-device.Tpo -c -o qmi_firmware_update-qfu-at-device.obj `if test -f 'qfu-at-device.c'; then $(CYGPATH_W) 'qfu-at-device.c'; else $(CYGPATH_W) '$(srcdir)/qfu-at-device.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-at-device.Tpo $(DEPDIR)/qmi_firmware_update-qfu-at-device.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-at-device.c' object='qmi_firmware_update-qfu-at-device.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-at-device.obj `if test -f 'qfu-at-device.c'; then $(CYGPATH_W) 'qfu-at-device.c'; else $(CYGPATH_W) '$(srcdir)/qfu-at-device.c'; fi`

qmi_firmware_update-qfu-enum-types.o: qfu-enum-types.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-enum-types.o -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-enum-types.Tpo -c -o qmi_firmware_update-qfu-enum-types.o `test -f 'qfu-enum-types.c' || echo '$(srcdir)/'`qfu-enum-types.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-enum-types.Tpo $(DEPDIR)/qmi_firmware_update-qfu-enum-types.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-enum-types.c' object='qmi_firmware_update-qfu-enum-types.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-enum-types.o `test -f 'qfu-enum-types.c' || echo '$(srcdir)/'`qfu-enum-types.c

qmi_firmware_update-qfu-enum-types.obj: qfu-enum-types.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qmi_firmware_update-qfu-enum-types.obj -MD -MP -MF $(DEPDIR)/qmi_firmware_update-qfu-enum-types.Tpo -c -o qmi_firmware_update-qfu-enum-types.obj `if test -f 'qfu-enum-types.c'; then $(CYGPATH_W) 'qfu-enum-types.c'; else $(CYGPATH_W) '$(srcdir)/qfu-enum-types.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qmi_firmware_update-qfu-enum-types.Tpo $(DEPDIR)/qmi_firmware_update-qfu-enum-types.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qfu-enum-types.c' object='qmi_firmware_update-qfu-enum-types.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qmi_firmware_update_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qmi_firmware_update-qfu-enum-types.obj `if test -f 'qfu-enum-types.c'; then $(CYGPATH_W) 'qfu-enum-types.c'; else $(CYGPATH_W) '$(srcdir)/qfu-enum-types.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(PROGRAMS) $(LTLIBRARIES)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
		-rm -f ./$(DEPDIR)/libutils_la-qfu-utils.Plo
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-at-device.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-device-selection.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-dload-message.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-enum-types.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-image-cwe.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-image-factory.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-image.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-log.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-main.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-operation-reset.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-operation-update.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-operation-verify.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-qdl-device.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-qdl-message.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-reseter.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-udev-helpers.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-updater.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
		-rm -f ./$(DEPDIR)/libutils_la-qfu-utils.Plo
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-at-device.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-device-selection.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-dload-message.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-enum-types.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-image-cwe.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-image-factory.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-image.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-log.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-main.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-operation-reset.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-operation-update.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-operation-verify.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-qdl-device.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-qdl-message.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-reseter.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-udev-helpers.Po
	-rm -f ./$(DEPDIR)/qmi_firmware_update-qfu-updater.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(am__recursive_targets) all check install install-am \
	install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--depfiles check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-noinstLTLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile


qfu-enum-types.h: Makefile.am $(ENUMS) $(top_srcdir)/build-aux/templates/qmi-enum-types-template.h
	$(AM_V_GEN) $(GLIB_MKENUMS) \
		--fhead "#ifndef QFU_ENUM_TYPES_H\n#define QFU_ENUM_TYPES_H\n#include \"qfu-image.h\"\n#include \"qfu-qdl-message.h\"\n#include \"qfu-dload-message.h\"\n" \
		--template $(top_srcdir)/build-aux/templates/qmi-enum-types-template.h \
		--ftail "#endif /* __QFUENUM_TYPES_H__ */\n" \
		$(ENUMS) > $@

qfu-enum-types.c: $(ENUMS) qfu-enum-types.h $(top_srcdir)/build-aux/templates/qmi-enum-types-template.c
	$(AM_V_GEN) $(GLIB_MKENUMS) \
		--fhead "#include \"qfu-enum-types.h\"\n" \
		--template $(top_srcdir)/build-aux/templates/qmi-enum-types-template.c \
		$(ENUMS) > $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
